
OBESERVAÇÃO: os codigos são lidos pelo programa de cima para baixo da esquerda para a direita

AVISO: o erro Not Set Before Reading It, indica que algum codigo não esta na ordem certa



; = indica que o comando foi finalizado



-SHOW_MESSAGE = cria um texto

str = string = texto q prcisa estar entre aspas
OBS: o show_message não consegue somar string(texto) com valores real 

Ex:show_messange("bom dia")

OBS: para colocar numeros no show_message não pode colocar aspas  " so se haver letras
OBS:  numeros quebradas são feitos com . ao inves de , 
EX: show_message(5.5)
EX: show_message("sua idadade:", 10)



- GET_STRING = serve para coletar valores strings, ou seja, textos, para variaveis 
-pode ser usado mesmo sem variavel, porem, não ira coletar nenhum valor e o sistema irá sublinha-lo de cor amarela

EX:
nome = get_string("Digite seu nome:");
show_message("Olá, " + nome + "!");
 



- GET_STRING_ASYNC = faz o mesmo que o get string anterior, porem, este não trava o jogo durante seu uso



- GET_INTEGER = serve para coletar valores reais, ou seja, numeros, para varaiveis (mas apenas numeros inteiros) 
-pode ser usado mesmo sem variavel, porem, não ira coletar nenhum valor e o sistema irá sublinha-lo de cor amarela


EX: 
idade = get_integer("Digite sua idade:");
show_message("Sua idade é: " + string(idade));



- STRING = serve para juntar valores reais e strings em um so comando

EX:
nome = get_string("seu nome: ","kauã");
idade = get_integer("qual a sua idade?", 44)
show_message("seu nome: " + nome + " sua idade: " + string(idade));

RS: no final de tudo vai aparecer uma tela com o nome e a idade
OBS: strings(textos) não podem ser somadas com reais, para isso se usa o comando string


-SHOW_QUESTION (dados boelanos)= serve para salvar coisas como escolhas 

EX:
pergunta= show_question("voce quer jogar?");
show_message(pergunta);

RS:vai surgir essa pergunta e duas opçoes (sim ou não)

OBS: verdadeiro ou falso, 1 ou 0, true ou false



-SHOW_DEBUG_MESSAGE = mostra mensagens no output


-DRAW_SELF = desenha a propria sprite do objeto


-DRAW_TEXT = desenha textos em um determinada posição de cada instancia daquele obj

-podendo desnhar strings ou numeros real


-ROOM_GOTO_NEXT = passa para a proxima room


-ROOM_GOTO =  faz o mesmo que a anterior, porem, esta depende de uma variavel


-KEYBORD_CHECK = checa se aquela tecla esta sendo pressionada

- normalmente se usa o if para esse codigo

-KEYBORD_CHECK(ord) = checa se alguma letra especifica esta sendo pressionada


-KEYBORD_CHECK(vk_) = checa se alguma tecla especifica (sem ser letras) esta sendo pressionada


-ROOM_GET_SPEED = serve para definir ou pegar a velocidade(fps) a room (não é recomendado)


-MOVE_BOUNCE_SOLID(código)
-faz o obj quicar em outros objs solidos
-é um valor booleano
-as mascaras de colisão dos obj tem que estar configuradas com o tipo precise slow
-é normalmente utilizado no evento colision 


-MOVE_BOUNCE_ALL(código)
-faz o obj quicarem em qualquer coisa
-é um valor booleano
-é normalmente utilizado no evento colision 



-RANDOM(códigos)
-gera um numero decimal aletorio entre 0 e o numero escolhido (o numero escolhido não pode ser gerado)


-IRANDOM
-gera um numero inteiro aleatorio entre 0 e o numero escolhido (o numero escolhido pode ser gerado)


-RANDOM_RANGE
-Gera um número decimal aleatorio entre os numeros escolhidos


-IRANDOM_RANGE
-Gera um número inteiro aleatorio entre os numeros escolhidos


-CHOOSE
-escolhe de forma aleatoria uma dos valores escolhidos
-vc pode definir infinitos valores


-SEEDS
-é um conjunto de numeros "aleatorios" que o computador usa quando um codigo pede um numero "aleatorio"
-esses numeros seguem uma sequencia, oque portanto os tornam numeros não aleatorios
-aula 32 modulo 8


-RAMDOMIZE / RANDOMISE
-serve para mudar a seed do jogo de forma aleatoria 
-o ideal é usar esse comando no scipt, pq assim ele vai iniciar antes de tudo


-RANDOM_SET_SEED
-serve para definir uma seed especifica


-PLACE_MEETING
-verifica se uma instância do objeto atual está colidindo com uma instância de outro objeto
-x e y: Representam as coordenadas onde você deseja verificar a colisão. Geralmente, você coloca a posição atual do objeto
-devolve um valor booleano


-INSTANCE_EXISTS
-verifica de o objeto ou um id existe no jogo



-INSTANCE_DESTROY
-destroi uma instancia, apaga ima instancia


-EXIT
-fecha um vento fazndo com que ele não funcione mais


-UNDERFINED 
-faz uma variavel ter valor indefinido




